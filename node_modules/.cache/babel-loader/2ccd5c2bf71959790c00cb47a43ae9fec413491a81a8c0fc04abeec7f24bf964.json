{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nconst handleResponse = response => response.ok ? response.json() : Promise.reject(`Ошибка ${response.status}`);\nexport const register = _ref => {\n  let {\n    password,\n    email\n  } = _ref;\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      // 'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  })\n  // .then((response => response.json()))\n  // .then((response) => {\n  //   try {\n  //     if (response.status === 200){\n  //       return response.json();\n  //     }\n  //   } catch(e){\n  //     return (e)\n  //   }\n  // })\n  // // .then((res) => {\n  // //   return res;\n  // // })\n  // .catch((err) => console.log(err));\n  .then(handleResponse);\n};\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      // 'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(handleResponse)\n  // .then((response => response.json()))\n  //   .then((response) => {\n  //     try {\n  //       if (response.status === 200){\n  //         return response.json();\n  //       }\n  //     } catch(e){\n  //       return (e)\n  //     }\n  //   })\n  //   .then((res) => {\n  //     return res;\n  //   })\n  //   .catch((err) => console.log(err));\n  .then(data => {\n    if (data.token) {\n      localStorage.setItem('jwt', data.token);\n      return data.token;\n    }\n  });\n};\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(handleResponse);\n  // .then((response => response.json()))\n  // .then((response) => {\n  //   try {\n  //     if (response.status === 200){\n  //       return response.json();\n  //     }\n  //   } catch(e){\n  //     return (e)\n  //   }\n  // })\n  // .then((res) => {\n  //   return res;\n  // })\n  // .catch((err) => console.log(err));\n};","map":{"version":3,"names":["BASE_URL","handleResponse","response","ok","json","Promise","reject","status","register","password","email","fetch","method","headers","body","JSON","stringify","then","authorize","data","token","localStorage","setItem","checkToken"],"sources":["/Users/master/Desktop/Projects/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\n\nconst handleResponse = response => response.ok ? response.json() : Promise.reject(`Ошибка ${response.status}`)\n\nexport const register = ({password, email}) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      // 'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({password, email})\n  })\n  // .then((response => response.json()))\n  // .then((response) => {\n  //   try {\n  //     if (response.status === 200){\n  //       return response.json();\n  //     }\n  //   } catch(e){\n  //     return (e)\n  //   }\n  // })\n  // // .then((res) => {\n  // //   return res;\n  // // })\n  // .catch((err) => console.log(err));\n  .then(handleResponse)\n}; \n\n\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      // 'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({password, email})\n  })\n  .then(handleResponse)\n  // .then((response => response.json()))\n//   .then((response) => {\n//     try {\n//       if (response.status === 200){\n//         return response.json();\n//       }\n//     } catch(e){\n//       return (e)\n//     }\n//   })\n//   .then((res) => {\n//     return res;\n//   })\n//   .catch((err) => console.log(err));\n  .then((data) => {\n    if (data.token) {\n      localStorage.setItem('jwt', data.token)\n      return data.token\n    }\n  })\n}; \n\n\n\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\" : `Bearer ${token}`\n    }\n  })\n  .then(handleResponse)\n  // .then((response => response.json()))\n  // .then((response) => {\n  //   try {\n  //     if (response.status === 200){\n  //       return response.json();\n  //     }\n  //   } catch(e){\n  //     return (e)\n  //   }\n  // })\n  // .then((res) => {\n  //   return res;\n  // })\n  // .catch((err) => console.log(err));\n}; \n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAGvD,MAAMC,cAAc,GAAGC,QAAQ,IAAIA,QAAQ,CAACC,EAAE,GAAGD,QAAQ,CAACE,IAAI,EAAE,GAAGC,OAAO,CAACC,MAAM,CAAE,UAASJ,QAAQ,CAACK,MAAO,EAAC,CAAC;AAE9G,OAAO,MAAMC,QAAQ,GAAG,QAAuB;EAAA,IAAtB;IAACC,QAAQ;IAAEC;EAAK,CAAC;EACxC,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IACjCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP;MACA,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACP,QAAQ;MAAEC;IAAK,CAAC;EACxC,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA,CACCO,IAAI,CAAChB,cAAc,CAAC;AACvB,CAAC;AAGD,OAAO,MAAMiB,SAAS,GAAG,CAACT,QAAQ,EAAEC,KAAK,KAAK;EAC5C,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IACjCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP;MACA,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACP,QAAQ;MAAEC;IAAK,CAAC;EACxC,CAAC,CAAC,CACDO,IAAI,CAAChB,cAAc;EACpB;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA,CACGgB,IAAI,CAAEE,IAAI,IAAK;IACd,IAAIA,IAAI,CAACC,KAAK,EAAE;MACdC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEH,IAAI,CAACC,KAAK,CAAC;MACvC,OAAOD,IAAI,CAACC,KAAK;IACnB;EACF,CAAC,CAAC;AACJ,CAAC;AAID,OAAO,MAAMG,UAAU,GAAIH,KAAK,IAAK;EACnC,OAAOT,KAAK,CAAE,GAAEX,QAAS,WAAU,EAAE;IACnCY,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAI,UAASO,KAAM;IACpC;EACF,CAAC,CAAC,CACDH,IAAI,CAAChB,cAAc,CAAC;EACrB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}