{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nexport const register = _ref => {\n  let {\n    password,\n    email\n  } = _ref;\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      // 'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  })\n  // .then((response => response.json()))\n  .then(response => {\n    try {\n      if (response.status === 200) {\n        return response.json();\n      }\n    } catch (e) {\n      return e;\n    }\n  }).then(res => {\n    return res;\n  }).catch(err => console.log(err));\n};\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      // 'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  })\n  // .then((response => response.json()))\n  .then(response => {\n    try {\n      if (response.status === 200) {\n        return response.json();\n      }\n    } catch (e) {\n      return e;\n    }\n  }).then(res => {\n    return res;\n  }).catch(err => console.log(err));\n};\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  })\n  // .then((response => response.json()))\n  .then(response => {\n    try {\n      if (response.status === 200) {\n        return response.json();\n      }\n    } catch (e) {\n      return e;\n    }\n  }).then(res => {\n    return res;\n  }).catch(err => console.log(err));\n};","map":{"version":3,"names":["BASE_URL","register","password","email","fetch","method","headers","body","JSON","stringify","then","response","status","json","e","res","catch","err","console","log","authorize","checkToken","token"],"sources":["/Users/master/Desktop/Projects/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const register = ({password, email}) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      // 'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({password, email})\n  })\n  // .then((response => response.json()))\n  .then((response) => {\n    try {\n      if (response.status === 200){\n        return response.json();\n      }\n    } catch(e){\n      return (e)\n    }\n  })\n  .then((res) => {\n    return res;\n  })\n  .catch((err) => console.log(err));\n}; \n\n\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      // 'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({password, email})\n  })\n  // .then((response => response.json()))\n  .then((response) => {\n    try {\n      if (response.status === 200){\n        return response.json();\n      }\n    } catch(e){\n      return (e)\n    }\n  })\n  .then((res) => {\n    return res;\n  })\n  .catch((err) => console.log(err));\n}; \n\n\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\" : `Bearer ${token}`\n    }\n  })\n  // .then((response => response.json()))\n  .then((response) => {\n    try {\n      if (response.status === 200){\n        return response.json();\n      }\n    } catch(e){\n      return (e)\n    }\n  })\n  .then((res) => {\n    return res;\n  })\n  .catch((err) => console.log(err));\n}; \n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,OAAO,MAAMC,QAAQ,GAAG,QAAuB;EAAA,IAAtB;IAACC,QAAQ;IAAEC;EAAK,CAAC;EACxC,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP;MACA,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACP,QAAQ;MAAEC;IAAK,CAAC;EACxC,CAAC;EACD;EAAA,CACCO,IAAI,CAAEC,QAAQ,IAAK;IAClB,IAAI;MACF,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAC;QAC1B,OAAOD,QAAQ,CAACE,IAAI,EAAE;MACxB;IACF,CAAC,CAAC,OAAMC,CAAC,EAAC;MACR,OAAQA,CAAC;IACX;EACF,CAAC,CAAC,CACDJ,IAAI,CAAEK,GAAG,IAAK;IACb,OAAOA,GAAG;EACZ,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACnC,CAAC;AAGD,OAAO,MAAMG,SAAS,GAAG,CAAClB,QAAQ,EAAEC,KAAK,KAAK;EAC5C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP;MACA,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACP,QAAQ;MAAEC;IAAK,CAAC;EACxC,CAAC;EACD;EAAA,CACCO,IAAI,CAAEC,QAAQ,IAAK;IAClB,IAAI;MACF,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAC;QAC1B,OAAOD,QAAQ,CAACE,IAAI,EAAE;MACxB;IACF,CAAC,CAAC,OAAMC,CAAC,EAAC;MACR,OAAQA,CAAC;IACX;EACF,CAAC,CAAC,CACDJ,IAAI,CAAEK,GAAG,IAAK;IACb,OAAOA,GAAG;EACZ,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACnC,CAAC;AAGD,OAAO,MAAMI,UAAU,GAAIC,KAAK,IAAK;EACnC,OAAOlB,KAAK,CAAE,GAAEJ,QAAS,WAAU,EAAE;IACnCK,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAI,UAASgB,KAAM;IACpC;EACF,CAAC;EACD;EAAA,CACCZ,IAAI,CAAEC,QAAQ,IAAK;IAClB,IAAI;MACF,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAC;QAC1B,OAAOD,QAAQ,CAACE,IAAI,EAAE;MACxB;IACF,CAAC,CAAC,OAAMC,CAAC,EAAC;MACR,OAAQA,CAAC;IACX;EACF,CAAC,CAAC,CACDJ,IAAI,CAAEK,GAAG,IAAK;IACb,OAAOA,GAAG;EACZ,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACnC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}